//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TiaXmlGenerator.Properties {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TiaXmlGenerator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu       &lt;SW.Blocks.CompileUnit ID=&quot;{id}&quot; CompositionName=&quot;CompileUnits&quot;&gt;
        ///        &lt;AttributeList&gt;
        ///          &lt;NetworkSource /&gt;
        ///          &lt;ProgrammingLanguage&gt;LAD&lt;/ProgrammingLanguage&gt;
        ///        &lt;/AttributeList&gt;
        ///        &lt;ObjectList&gt;
        ///          &lt;MultilingualText ID=&quot;{id}&quot; CompositionName=&quot;Comment&quot;&gt;
        ///            &lt;ObjectList&gt;
        ///              &lt;MultilingualTextItem ID=&quot;{id}&quot; CompositionName=&quot;Items&quot;&gt;
        ///                &lt;AttributeList&gt;
        ///                  &lt;Culture&gt;pl-PL&lt;/Culture&gt;
        ///                  &lt;Text&gt;{comment}&lt;/Text [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string EmptySubnetComment {
            get {
                return ResourceManager.GetString("EmptySubnetComment", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu     &lt;/ObjectList&gt;
        ///  &lt;/SW.Blocks.FC&gt;
        ///&lt;/Document&gt;.
        /// </summary>
        internal static string FC_ActuatorsFooter {
            get {
                return ResourceManager.GetString("FC_ActuatorsFooter", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu       &lt;SW.Blocks.CompileUnit ID=&quot;{id}&quot; CompositionName=&quot;CompileUnits&quot;&gt;
        ///        &lt;AttributeList&gt;
        ///          &lt;NetworkSource&gt;&lt;FlgNet xmlns=&quot;http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4&quot;&gt;
        ///  &lt;Parts&gt;
        ///    &lt;Access Scope=&quot;GlobalVariable&quot; UId=&quot;21&quot;&gt;
        ///      &lt;Symbol&gt;
        ///        &lt;Component Name=&quot;DB_SafetyStatus&quot; /&gt;
        ///        &lt;Component Name=&quot;Safety&quot; /&gt;
        ///        &lt;Component Name=&quot;MachineOn&quot; /&gt;
        ///        &lt;Address Area=&quot;None&quot; Type=&quot;Bool&quot; BlockNumber=&quot;1005&quot; BitOffset=&quot;32&quot; Informative=&quot;true&quot; /&gt;
        ///      &lt;/ [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string FC_ActuatorsHandling {
            get {
                return ResourceManager.GetString("FC_ActuatorsHandling", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Document&gt;
        ///  &lt;Engineering version=&quot;V16&quot; /&gt;
        ///  &lt;DocumentInfo&gt;
        ///    &lt;Created&gt;2023-07-10T07:35:41.4701667Z&lt;/Created&gt;
        ///    &lt;ExportSetting&gt;WithDefaults, WithReadOnly&lt;/ExportSetting&gt;
        ///    &lt;InstalledProducts&gt;
        ///      &lt;Product&gt;
        ///        &lt;DisplayName&gt;Totally Integrated Automation Portal&lt;/DisplayName&gt;
        ///        &lt;DisplayVersion&gt;V16 Update 6&lt;/DisplayVersion&gt;
        ///      &lt;/Product&gt;
        ///      &lt;OptionPackage&gt;
        ///        &lt;DisplayName&gt;TIA Portal Version Control Interface&lt;/DisplayName&gt;
        ///        &lt; [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string FC_ActuatorsHeader {
            get {
                return ResourceManager.GetString("FC_ActuatorsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu       &lt;SW.Blocks.CompileUnit ID=&quot;{id}&quot; CompositionName=&quot;CompileUnits&quot;&gt;
        ///        &lt;AttributeList&gt;
        ///          &lt;NetworkSource&gt;&lt;FlgNet xmlns=&quot;http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4&quot;&gt;
        ///  &lt;Parts&gt;
        ///    &lt;Access Scope=&quot;GlobalConstant&quot; UId=&quot;21&quot;&gt;
        ///      &lt;Constant Name=&quot;{name}&quot;&gt;
        ///        &lt;ConstantType Informative=&quot;true&quot;&gt;Int&lt;/ConstantType&gt;
        ///        &lt;ConstantValue Informative=&quot;true&quot;&gt;{constant}&lt;/ConstantValue&gt;
        ///        &lt;StringAttribute Name=&quot;Format&quot; Informative=&quot;true&quot;&gt;Dec_signed&lt;/StringAttrib [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string FC_ActuatorsMovement {
            get {
                return ResourceManager.GetString("FC_ActuatorsMovement", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu       &lt;SW.Blocks.CompileUnit ID=&quot;{id}&quot; CompositionName=&quot;CompileUnits&quot;&gt;
        ///        &lt;AttributeList&gt;
        ///          &lt;NetworkSource&gt;&lt;FlgNet xmlns=&quot;http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4&quot;&gt;
        ///  &lt;Parts&gt;
        ///    &lt;Access Scope=&quot;GlobalVariable&quot; UId=&quot;21&quot;&gt;
        ///      &lt;Symbol&gt;
        ///        &lt;Component Name=&quot;DB_Actuators&quot; /&gt;
        ///        &lt;Component Name=&quot;Q&quot; AccessModifier=&quot;Array&quot;&gt;
        ///          &lt;Access Scope=&quot;GlobalConstant&quot;&gt;
        ///            &lt;Constant Name=&quot;{name}&quot;&gt;
        ///              &lt;ConstantType Informative=&quot;true&quot;&gt;Int&lt;/ [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string FC_ActuatorsOutputs {
            get {
                return ResourceManager.GetString("FC_ActuatorsOutputs", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu       &lt;SW.Blocks.CompileUnit ID=&quot;{id}&quot; CompositionName=&quot;CompileUnits&quot;&gt;
        ///        &lt;AttributeList&gt;
        ///          &lt;NetworkSource&gt;&lt;FlgNet xmlns=&quot;http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4&quot;&gt;
        ///  &lt;Parts&gt;
        ///    &lt;Access Scope=&quot;GlobalConstant&quot; UId=&quot;21&quot;&gt;
        ///      &lt;Constant Name=&quot;{name}&quot;&gt;
        ///        &lt;ConstantType Informative=&quot;true&quot;&gt;Int&lt;/ConstantType&gt;
        ///        &lt;ConstantValue Informative=&quot;true&quot;&gt;{constant}&lt;/ConstantValue&gt;
        ///        &lt;StringAttribute Name=&quot;Format&quot; Informative=&quot;true&quot;&gt;Dec_signed&lt;/StringAttrib [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string FC_ActuatorsParameters {
            get {
                return ResourceManager.GetString("FC_ActuatorsParameters", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu       &lt;SW.Blocks.CompileUnit ID=&quot;{id}&quot; CompositionName=&quot;CompileUnits&quot;&gt;
        ///        &lt;AttributeList&gt;
        ///          &lt;NetworkSource&gt;&lt;FlgNet xmlns=&quot;http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v4&quot;&gt;
        ///  &lt;Parts&gt;
        ///    &lt;Access Scope=&quot;GlobalVariable&quot; UId=&quot;21&quot;&gt;
        ///      &lt;Symbol&gt;
        ///        &lt;Component Name=&quot;I_StatusSafetyEStop&quot; /&gt;
        ///        &lt;Address Area=&quot;Input&quot; Type=&quot;Bool&quot; BitOffset=&quot;13&quot; Informative=&quot;true&quot; /&gt;
        ///      &lt;/Symbol&gt;
        ///    &lt;/Access&gt;
        ///    &lt;Access Scope=&quot;LocalVariable&quot; UId=&quot;22&quot;&gt;
        ///      &lt;Symbol&gt;
        ///       [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string FC_ActuatorsSafety {
            get {
                return ResourceManager.GetString("FC_ActuatorsSafety", resourceCulture);
            }
        }
    }
}
